{"ast":null,"code":"var _jsxFileName = \"/Users/bagjimin/Desktop/aichatbot-project/frontend/src/components/AuthActions.jsx\",\n  _s = $RefreshSig$();\n// src/components/AuthActions.jsx\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || \"http://localhost:8000\";\n\n/**\n * 로그아웃(세션만 종료) / 연결해제(카카오-앱 연결 자체 해제) 버튼\n * - 성공 시 로그인 페이지로 이동\n * - fetch 요청에는 credentials: \"include\" 필수(세션 쿠키 사용)\n * - 백엔드가 GET만 받으면 method: \"GET\" 그대로 사용\n *   (POST로만 받게 해두었으면 method를 \"POST\"로 바꾸세요)\n */\nexport default function AuthActions() {\n  _s();\n  const navigate = useNavigate();\n  const [busy, setBusy] = useState(false);\n  const call = async (path /* '/logout' | '/unlink' */) => {\n    if (busy) return;\n    setBusy(true);\n    try {\n      const res = await fetch(`${API_BASE}${path}`, {\n        method: \"GET\",\n        // ← 백엔드가 GET 라우트라면 이대로. POST만 받으면 \"POST\"로 바꾸세요.\n        credentials: \"include\"\n      });\n      try {\n        await res.text();\n      } catch (_) {}\n      navigate(\"/login\", {\n        replace: true\n      });\n    } catch (err) {\n      console.error(err);\n      alert(\"요청 중 문제가 발생했어요. 콘솔을 확인해주세요.\");\n    } finally {\n      setBusy(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.wrap,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.lightBtn,\n      onClick: () => call(\"/logout\"),\n      disabled: busy,\n      title: \"\\uC138\\uC158\\uB9CC \\uC885\\uB8CC (\\uB2E4\\uC74C \\uB85C\\uADF8\\uC778 \\uC2DC \\uB3D9\\uC758\\uCC3D\\uC740 \\uC548 \\uB730 \\uC218 \\uC788\\uC5B4\\uC694)\",\n      children: busy ? \"처리 중...\" : \"로그아웃\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.dangerBtn,\n      onClick: () => call(\"/unlink\"),\n      disabled: busy,\n      title: \"\\uCE74\\uCE74\\uC624-\\uC571 \\uC5F0\\uACB0 \\uD574\\uC81C (\\uB2E4\\uC74C \\uB85C\\uADF8\\uC778 \\uC2DC \\uB3D9\\uC758\\uCC3D\\uC774 \\uB2E4\\uC2DC \\uB739\\uB2C8\\uB2E4)\",\n      children: busy ? \"처리 중...\" : \"연결해제\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthActions, \"8xPUgrzQntJQH9IWhMY3k3MOw2E=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthActions;\nconst styles = {\n  wrap: {\n    display: \"flex\",\n    gap: 8,\n    alignItems: \"center\"\n  },\n  lightBtn: {\n    padding: \"10px 14px\",\n    borderRadius: 10,\n    border: \"1px solid #ddd\",\n    background: \"#fff\",\n    cursor: \"pointer\",\n    fontWeight: 600\n  },\n  dangerBtn: {\n    padding: \"10px 14px\",\n    borderRadius: 10,\n    border: \"1px solid #d33\",\n    background: \"#ffefef\",\n    color: \"#a00\",\n    cursor: \"pointer\",\n    fontWeight: 700\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"AuthActions\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","AuthActions","_s","navigate","busy","setBusy","call","path","res","fetch","method","credentials","text","_","replace","err","console","error","alert","style","styles","wrap","children","lightBtn","onClick","disabled","title","fileName","_jsxFileName","lineNumber","columnNumber","dangerBtn","_c","display","gap","alignItems","padding","borderRadius","border","background","cursor","fontWeight","color","$RefreshReg$"],"sources":["/Users/bagjimin/Desktop/aichatbot-project/frontend/src/components/AuthActions.jsx"],"sourcesContent":["// src/components/AuthActions.jsx\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst API_BASE = process.env.REACT_APP_API_BASE || \"http://localhost:8000\";\n\n/**\n * 로그아웃(세션만 종료) / 연결해제(카카오-앱 연결 자체 해제) 버튼\n * - 성공 시 로그인 페이지로 이동\n * - fetch 요청에는 credentials: \"include\" 필수(세션 쿠키 사용)\n * - 백엔드가 GET만 받으면 method: \"GET\" 그대로 사용\n *   (POST로만 받게 해두었으면 method를 \"POST\"로 바꾸세요)\n */\nexport default function AuthActions() {\n  const navigate = useNavigate();\n  const [busy, setBusy] = useState(false);\n\n  const call = async (path /* '/logout' | '/unlink' */) => {\n    if (busy) return;\n    setBusy(true);\n    try {\n      const res = await fetch(`${API_BASE}${path}`, {\n        method: \"GET\", // ← 백엔드가 GET 라우트라면 이대로. POST만 받으면 \"POST\"로 바꾸세요.\n        credentials: \"include\",\n      });\n      try {\n        await res.text();\n      } catch (_) {}\n      navigate(\"/login\", { replace: true });\n    } catch (err) {\n      console.error(err);\n      alert(\"요청 중 문제가 발생했어요. 콘솔을 확인해주세요.\");\n    } finally {\n      setBusy(false);\n    }\n  };\n\n  return (\n    <div style={styles.wrap}>\n      <button\n        style={styles.lightBtn}\n        onClick={() => call(\"/logout\")}\n        disabled={busy}\n        title=\"세션만 종료 (다음 로그인 시 동의창은 안 뜰 수 있어요)\"\n      >\n        {busy ? \"처리 중...\" : \"로그아웃\"}\n      </button>\n\n      <button\n        style={styles.dangerBtn}\n        onClick={() => call(\"/unlink\")}\n        disabled={busy}\n        title=\"카카오-앱 연결 해제 (다음 로그인 시 동의창이 다시 뜹니다)\"\n      >\n        {busy ? \"처리 중...\" : \"연결해제\"}\n      </button>\n    </div>\n  );\n}\n\nconst styles = {\n  wrap: { display: \"flex\", gap: 8, alignItems: \"center\" },\n  lightBtn: {\n    padding: \"10px 14px\",\n    borderRadius: 10,\n    border: \"1px solid #ddd\",\n    background: \"#fff\",\n    cursor: \"pointer\",\n    fontWeight: 600,\n  },\n  dangerBtn: {\n    padding: \"10px 14px\",\n    borderRadius: 10,\n    border: \"1px solid #d33\",\n    background: \"#ffefef\",\n    color: \"#a00\",\n    cursor: \"pointer\",\n    fontWeight: 700,\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}